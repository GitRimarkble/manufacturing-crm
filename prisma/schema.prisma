// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  MANAGER
  WORKER
}

enum OrderStatus {
  PENDING
  IN_PRODUCTION
  COMPLETED
  CANCELLED
}

enum ProductType {
  NEON
  LED
}

enum ProductStatus {
  ACTIVE
  DISCONTINUED
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  password  String
  role      UserRole  @default(WORKER)
  tasks     Task[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deleted   Boolean   @default(false)
  deletedAt DateTime?

  @@unique([email, deleted])
}

model Customer {
  id        Int       @id @default(autoincrement())
  name      String
  email     String
  phone     String?
  address   String?
  orders    Order[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deleted   Boolean   @default(false)
  deletedAt DateTime?

  @@unique([email, deleted])
}

model Order {
  id            Int            @id @default(autoincrement())
  customer      Customer       @relation(fields: [customerId], references: [id])
  customerId    Int
  status        OrderStatus    @default(PENDING)
  totalAmount   Decimal
  notes         String?
  orderProducts OrderProduct[]
  tasks         Task[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  deleted       Boolean        @default(false)
  deletedAt     DateTime?
}

model Product {
  id            Int            @id @default(autoincrement())
  name          String
  description   String?
  type          ProductType
  materialCost  Decimal
  laborCost     Decimal
  price         Decimal
  status        ProductStatus  @default(ACTIVE)
  stock         Int           @default(0)
  orderProducts OrderProduct[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  deleted       Boolean        @default(false)
  deletedAt     DateTime?
}

model OrderProduct {
  id            Int       @id @default(autoincrement())
  order         Order     @relation(fields: [orderId], references: [id])
  orderId       Int
  product       Product   @relation(fields: [productId], references: [id])
  productId     Int
  quantity      Int
  price         Decimal
  customization String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deleted       Boolean   @default(false)
  deletedAt     DateTime?
}

model ProductionStage {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  orderNumber Int
  tasks       Task[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deleted     Boolean   @default(false)
  deletedAt   DateTime?
}

model Task {
  id               Int             @id @default(autoincrement())
  title            String
  description      String?
  status           TaskStatus      @default(PENDING)
  assignedTo       User?           @relation(fields: [assignedToId], references: [id])
  assignedToId     Int?
  productionStage  ProductionStage @relation(fields: [productionStageId], references: [id])
  productionStageId Int
  order            Order           @relation(fields: [orderId], references: [id])
  orderId          Int
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  deleted          Boolean         @default(false)
  deletedAt        DateTime?
}

model MaterialInventory {
  id           Int       @id @default(autoincrement())
  name         String
  description  String?
  quantity     Int       @default(0)
  unit         String
  reorderPoint Int       @default(10)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deleted      Boolean   @default(false)
  deletedAt    DateTime?
}
